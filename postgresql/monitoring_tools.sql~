CREATE EXTENSION pg_buffercache;

SELECT c.relname, count(*) AS buffers
             FROM pg_buffercache b INNER JOIN pg_class c
             ON b.relfilenode = pg_relation_filenode(c.oid) AND
                b.reldatabase IN (0, (SELECT oid FROM pg_database
                                      WHERE datname = current_database()))
             GROUP BY c.relname
             ORDER BY 2 DESC
             LIMIT 10;












pg_stat_stements
-----------------

shared_preload_libraries = 'pg_stat_statements'

pg_stat_statements.max=10000
pg_stat_statements.track=all

create extension pg_stat_statements;


SELECT query, calls, total_time, rows, 100.0 * shared_blks_hit /
               nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
          FROM pg_stat_statements ORDER BY total_time DESC LIMIT 5;


pg_stat_statements_reset()

pg_stat_plans:
=============

shared_preload_libraries = 'pg_stat_plans'

pg_stat_plans.max = 10000
pg_stat_plans.track = all


pg_stat_plans_reset()

yum install postgresql-9.6.8 pgstatplans

combine both :
---------------
shared_preload_libraries = 'pg_stat_statements pg_stat_plans'
pg_stat_statements.max=10000
pg_stat_statements.track=all

pg_stat_plans.max = 10000
pg_stat_plans.track = all


work_mem
checkpoint_segments
checkpoint_timeout


